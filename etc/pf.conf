#	$OpenBSD: pf.conf,v 1.55 2017/12/03 20:40:04 sthen Exp $
#
# See pf.conf(5) and /etc/examples/pf.conf

# read the log file: tcpdump -n -e -ttt -r /var/log/pflog
# real-time logging: tcpdump -neq -ttt -i pflog0
#                    tcpdump -nettti pflog0 action drop
#		     tcpdump -vvopn -i enc0
# show queue: pfctl -vvs queue
#             systat queues
# show stats: pfctl -s info
#             systat pf
# show states: pfctl -s states
#              systat states
# table stats: pfctl -v -t martians -T show
# show rule nr. 4: pfctl -v -s rules -R 4
# show rules, prepend rule numbers: pfctl -a '*' -vvsr
#                                   systat rules
# show limits: pfctl -s memory


#OPTIONS
set block-policy drop
set skip on {lo0, enc0}
set block-policy drop
set loginterface egress

#VARIABLES
ext_if="vio0"

include "/etc/pf.conf.macro.public"

table <users> persist const {172.16.16.0/24, 172.16.18.0/24, 172.16.19.0/24}
table <locals> persist const {172.16.19.0/24, 172.16.17.0/24, 172.16.18.0/24, 10.10.10.0/24, 192.168.13.0/24}
table <ipsec> persist const {45.32.144.15, 139.180.206.19, 78.141.201.0, 155.138.247.27, 81.44.32.47}

table <reserved> const persist counters file "/etc/pf.conf.table.reserved"
table <nsd> const persist counters file "/etc/pf.conf.table.nsd"


table <ospf_mcast> persist const {224.0.0.5, 224.0.0.6}
table <attacker> persist
table <attacker_v6> persist

#DEFAULT POLICY
block in on $ext_if
block in on gre
block quick from <attacker>
block quick from <attacker_v6>
block proto {tcp,udp} user _iperfd
pass out all

pass quick on $ext_if to $ext_if:broadcast

#QUEUE

#queue outq on $ext_if bandwidth 99M max 99M flows 1024 qlimit 1024 

#NAT

match out on $ext_if from <users> to ! <reserved> received-on gre nat-to $pub
#match out on $ext_if from wg:network to ! <reserved> nat-to $ext_if 

#INGRESS

pass in on $ext_if inet6 proto icmp6 all icmp6-type { routeradv neighbrsol neighbradv }
pass in on $ext_if proto icmp from any to $pub icmp-type echoreq 
pass in on $ext_if proto icmp6 from any to $pub_v6 icmp6-type echoreq 
pass in on $ext_if proto tcp from any to $pub port { smtp, smtps } modulate state (max-src-conn 2, max-src-conn-rate 8/30, overload <attacker>)
pass in on $ext_if proto tcp from any to $pub_v6 port  { smtp, smtps } modulate state (max-src-conn 2, max-src-conn-rate 8/30, overload <attacker_v6>)
pass in on $ext_if proto tcp from any to { $pub , $pub_v6 } port auth modulate state
pass in on $ext_if proto {tcp udp} from any to { $pub , $pub_v6 } port domain modulate state
pass in on $ext_if proto tcp from any to { $pub , $pub_v6 } port {www, https} modulate state
pass in on $ext_if proto udp from any to { $pub , $pub_v6 } port 65131 modulate state
pass in on $ext_if proto udp from <ipsec> to $pub port {isakmp, ipsec-nat-t} 
pass in on $ext_if proto esp from <ipsec> to $pub  

#GRE

pass in quick on gre from <users> to ! <reserved>
pass in on gre proto gre no state
pass in on gre proto icmp from <locals> to gre icmp-type echoreq
pass in on gre proto ospf 
pass in on gre proto icmp from <locals> to vether0 icmp-type echoreq
pass in on gre proto tcp from <locals> to vether0 port {ssh, http, submission, ftp, 31337}
pass in on gre proto udp from <users> to vether0 port 5353 user _tor modulate state
pass in on gre proto tcp from <users> to vether0 port \
	{9900, 9901, 9902, 9903, 9904, 9905, 9906, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9050} user _tor modulate state
pass in on gre proto tcp from <locals> to vether0 port 5001 user _iperfd modulate state
pass in on nsd proto {tcp, udp} from nsd:peer to <nsd> port domain modulate state

#VETHER
pass in on vether0 proto icmp from <locals> to vether0 icmp-type echoreq modulate state
pass in on vether0 proto tcp from <users> to vether0 port {ftp, ssh} modulate state
pass in on vether0 proto udp from <users> to vether0 port 5353 user _tor modulate state
pass in on vether0 proto tcp from <users> to vether0 port \
	{9900, 9901, 9902, 9903, 9904, 9905, 9906, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9050} user _tor modulate state
pass in on vether0 proto tcp from <locals> to vether0 port {http, 5001} user _iperfd modulate state


#OUTGRESS
block out quick on $ext_if proto gre from $pub to <ipsec>
block out quick on gre from gre to <users>
