#       $OpenBSD: pf.conf,v 1.55 2017/12/03 20:40:04 sthen Exp $
#
# pf.conf(5) and /etc/examples/pf.conf

#https://mailing.openbsd.misc.narkive.com/jtIB9W3w/pf-packet-flow-diagram:i.2.1.full

data_net="10.3.30.0/24"
data_if="vlan100"
guest_net="10.1.11.0/24"
guest_if="vlan110"
direct_net="10.2.22.0/24"
direct_if="vlan120"
us_net="10.3.33.0/24"
us_if="vlan130"
ext_if="pppoe0"
vpn_if="tun0"
vpnudp_if="tun1"
vpn_gw="AAAA"
vpnudp_gw="BBBB"
he_if="gif0"
cyberanarkhia="10.3.30.200/32"
bashkortostan_data="10.3.30.13/32"
bashkortostan_us="10.3.33.13/32"
smaug_data="10.3.30.31/32"
smaug_guest="10.1.11.31/32"
smaug_direct="10.2.22.31/32"
smaug_us="10.3.33.31/32"
cyberlambda="10.3.30.201/32"
cyberarcade="10.2.22.11/32"
chuvashia="10.3.30.23/32"
scatha="10.3.30.205/32"
#assvpn_host="CCCC"
#vaaapsdsasdasnudp_host="DDDD"

table <dnsext> persist const {1.1.1.1, 8.8.8.8, 9.9.9.9, 1.0.0.1, 148.112.112.112}
table <protonvpn> {109.201.133.22, 46.166.142.220, 89.39.107.191, 217.23.3.96,\
        217.23.3.91, 89.39.107.190, 89.39.107.196, 109.201.133.24, 217.23.3.92,\
        89.39.107.204, 46.166.142.219, 89.39.107.200, 46.166.142.215, 89.39.107.198,\
        89.39.107.203, 89.39.107.194, 109.201.133.26, 89.39.107.195, 46.166.142.214,\
        89.39.107.192, 89.39.107.199, 89.39.107.202, 217.23.3.171, 46.166.142.222,\
        89.39.107.197, 89.39.107.201, 46.166.142.221, 46.166.142.216, 89.39.107.193,\
        46.166.142.217, 89.39.107.205, 109.201.133.30, 192.96.203.70, 209.58.142.161,\
        69.161.199.70, 209.58.147.242, 209.58.147.245, 209.58.147.238, 108.59.0.38,\
        207.244.109.180, 209.58.142.158, 69.161.199.68, 192.96.203.69, 209.58.147.244,\
        209.58.147.241, 108.59.0.37, 209.58.142.159, 69.161.199.69, 209.58.142.157,\
        209.58.142.155, 209.58.142.154, 108.59.0.39, 207.244.109.179, 209.58.147.210,\
        209.58.147.239, 198.52.38.54, 69.161.199.71, 198.52.38.53, 192.96.203.72,\
        209.58.147.243, 207.244.109.181, 207.244.109.182, 192.96.203.71, 209.58.142.156,\
        198.52.38.52, 198.52.38.55, 108.59.0.40, 209.58.142.160, 108.59.0.37, 209.58.142.159,\
        69.161.199.69, 209.58.142.157, 209.58.142.155, 209.58.142.154, 108.59.0.39, 207.244.109.179,\
        209.58.147.210, 209.58.147.239}
table <ntppool> {89.163.241.149, 195.78.244.34, 85.93.216.115, 80.74.64.2}
table <reserved> persist const {0.0.0.0/8, 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8,\
        169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24,\
        192.168.0.0/16, 198.18.0.0/15,  198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4,\
        240.0.0.0/4, 255.255.255.255/32}
table <data_dhcp> persist const {10.3.30.13, 10.3.30.14, 10.3.30.15, 10.3.30.16, 10.3.30.17,\
        10.3.30.18, 10.3.30.19, 10.3.30.20, 10.3.30.21, 10.3.30.22, 10.3.30.23, 10.3.30.24,\
        10.3.30.25, 10.3.30.26, 10.3.30.27, 10.3.30.28, 10.3.30.29, 10.3.30.30, 10.3.30.31}
                

#OPTIONS
set skip on lo
set debug info
set reassemble yes
set block-policy drop
set loginterface egress
set state-policy if-bound
set fingerprints "/etc/pf.os"
set ruleset-optimization none
set optimization normal
set timeout { tcp.established 600, tcp.closing 60 }

#DEFAULT POLICY
block return    # block stateless traffic
pass            # establish keep-state

#RDR

pass in on pppoe inet proto tcp from ! <reserved> to self port www rdr-to $cyberarcade port www
pass in on pppoe inet proto tcp from ! <reserved> to self port https rdr-to $cyberarcade port https
pass in on pppoe inet proto {tcp udp} from ! <reserved> to self port 3478 rdr-to $cyberarcade port 3478
pass in on pppoe inet proto {tcp udp} from ! <reserved> to self port 3479 rdr-to $cyberarcade port 3479
pass in on pppoe inet proto tcp from ! <reserved> to self port 3480 rdr-to $cyberarcade port 3480

#INGRESS FILTER

block in on $data_if
block in on $guest_if
block in on $direct_if
block in on $us_if

#services
pass in inet proto icmp to self icmp-type echoreq 
pass in on $data_if inet proto tcp from $bashkortostan_data to $smaug_data port ssh
pass in on $data_if inet proto tcp from $cyberanarkhia to $smaug_data port ssh 
pass in on $data_if inet proto tcp from $scatha to $smaug_data port ssh
pass in on $data_if inet proto tcp from $bashkortostan_us to $smaug_us port {4444 4567 7070}
pass in on $data_if inet proto udp from $cyberanarkhia to $smaug_data port 5300
pass in on $data_if inet proto tcp from $bashkortostan_data to $smaug_data port {9040 9900 9901 9902 9903 9904 9905 9906 9907 9908 9909 9910 9911 9912 9913}
pass in on {$guest_if $direct_if} inet proto udp from 0.0.0.0 to 255.255.255.255 port bootps 
pass in on $us_if inet proto tcp from $bashkortostan_us to $smaug_us port privoxy

#forward local
pass in on $data_if inet proto tcp from $bashkortostan_data to $cyberarcade
pass in on {$data_if $guest_if $direct_if} inet proto {tcp udp} from {$data_net $guest_net $direct_net} to $cyberanarkhia port domain 
pass in on {$data_if $guest_if $direct_if} inet proto udp from {$data_net $guest_net $direct_net} to $cyberanarkhia port ntp 

#forward internet
pass in on $data_if inet proto {tcp udp} from $cyberanarkhia to <dnsext> port domain tag to-vpnudp 
pass in on $data_if inet proto {tcp udp} from $cyberanarkhia to <ntppool> port ntp tag to-vpnudp
pass in on $data_if inet proto tcp from $cyberanarkhia to 193.219.28.2 tag to-vpnudp
pass in on $data_if inet proto tcp from $cyberanarkhia to 195.95.187.28 tag to-vpnudp
pass in on $data_if inet proto tcp from $chuvashia to 199.233.217.198 port ssh tag to-vpnudp
pass in on $data_if inet proto tcp from $cyberlambda to 176.9.48.73 port {www https} tag to-vpnudp 
pass in on $data_if inet proto tcp from $bashkortostan_data to ! <reserved> port {ftp www https rsync} tag to-vpnudp
pass in on $data_if inet proto tcp from $cyberanarkhia to ! <reserved> port {www https} tag to-vpnudp
pass in on $data_if inet proto icmp from $bashkortostan_data to ! <reserved> icmp-type echoreq tag to-vpnudp
pass in on $data_if inet proto icmp from <data_dhcp> to ! <reserved> icmp-type echoreq tag to-vpnudp
pass in on $data_if inet proto {tcp udp} from <data_dhcp> to ! <reserved> port {www https} tag to-vpnudp
pass in on $data_if inet proto icmp from $scatha to ! <reserved> icmp-type echoreq tag to-vpnudp
pass in on $data_if inet proto {tcp udp} from $scatha to ! <reserved> port {www https} tag to-vpnudp
pass in on $data_if inet proto tcp from $bashkortostan_data to ! <reserved> port monero tag to-vpnudp
pass in on $data_if inet proto {tcp udp} from $bashkortostan_data to ! <reserved> port finger tag to-vpnudp
pass in on $data_if inet proto {tcp udp} from $bashkortostan_data to ! <reserved> port pptp tag to-vpnudp 
#pass in on $data_if gre proto gre from $bashkortostan_data to ! <reserved> no state tag to-vpnudp

pass in on $guest_if inet proto tcp from $guest_net to ! <reserved> port {www https} tag to-vpnudp

pass in on $direct_if inet proto tcp from $cyberarcade to ! <reserved> port {www https}
pass in on $direct_if inet proto udp from $cyberarcade to ! <reserved> port stun 
pass in on $direct_if inet proto icmp from $cyberarcade to ! <reserved> icmp-type echoreq 

pass in on $us_if inet proto tcp from $bashkortostan_us to ! <reserved> port {ftp www https} tag to-vpn


#INGRESS PF ROUTING

pass in tagged to-vpnudp route-to $vpnudp_if
pass in tagged to-vpn route-to $vpn_if

#EGRESS SCRUB

match on egress scrub (max-mss 1440)

#EGRESS NAT

match out on $vpnudp_if nat-to ($vpnudp_if) tagged to-vpnudp
match out on $vpn_if nat-to ($vpn_if) tagged to-vpn
match out on egress inet proto {tcp udp} nat-to ($vpnudp_if) user _tor
match out on egress inet proto {tcp udp} nat-to ($vpnudp_if) user _i2pd
match out on egreess inet proto {tcp udp} nat-to ($vpn_if) user _privoxy
#match out on egress inet proto tcp port 8443 nat-to ($vpnudp_if) 
match out on egress inet proto icmp from self to 1.1.1.1 icmp-type echoreq nat-to ($vpn_if)
match out on egress inet proto icmp from self to 9.9.9.9 icmp-type echoreq nat-to ($vpnudp_if)
match out on $vpn_if nat-to ($vpn_if)
match out on $vpnudp_if nat-to ($vpnudp_if)
match out on $ext_if nat-to ($ext_if) 

#EGRESS FILTER

block out on pppoe
block out on tun 
block return out log proto {tcp udp} user _pbuild

block out on pppoe inet proto {tcp udp} user _tor
pass out on pppoe inet proto tcp from self to any port {www https 9001 9030} user _tormain
pass out on pppoe inet proto icmp all icmp-type echoreq 
pass out on pppoe inet proto {tcp udp} to <dnsext> port domain 
pass out on pppoe inet proto udp to <protonvpn> port {1194 4569 5060} 
pass out on pppoe inet proto tcp to ! <reserved> port {www https}
pass out on tun inet proto tcp to ! <reserved> port monero 
pass out on pppoe inet proto udp to ! <reserved> port stun  
pass out on pppoe inet to 216.66.80.98

pass out on tun inet proto icmp all icmp-type echoreq 
pass out on tun inet proto {tcp udp} to <dnsext> port domain 
pass out on tun inet proto {tcp udp} to <ntppool> port ntp 
pass out on tun inet proto tcp to ! <reserved> port {www https}
pass out on tun inet proto tcp to ! <reserved> port {www https 9001 9030} user _tor
pass out on tun inet proto tcp to ! <reserved> port 8443 user _i2pd
pass out on tun inet proto tcp to 193.219.28.2 
pass out on tun inet proto tcp to 195.95.187.28
pass out on tun inet proto tcp to 199.233.217.198 port ssh
pass out on tun inet proto {tcp udp} from $bashkortostan_data to ! <reserved> port finger

#EGRESS PF ROUTING 

pass out on egress inet proto icmp from self to 1.1.1.1 icmp-type echoreq route-to ($vpn_if $vpn_gw)
pass out on egress inet proto icmp from self to 9.9.9.9 icmp-type echoreq route-to ($vpnudp_if $vpnudp_gw)
pass out on egress inet proto {tcp udp} from self to any port {www https 9001 9030} user _tor route-to ($vpnudp_if $vpnudp_gw)  
pass out on egress inet proto {tcp udp} from self to ! <reserved> user _i2pd route-to ($vpnudp_if $vpnudp_gw)
pass out on egress inet proto {tcp udp} from self to any port {www https} user _privoxy route-to ($vpn_if $vpn_gw)  

#EGRESS QUEUE

queue outq on $vpnudp_if flows 1024 bandwidth 12000K max 12256K qlimit 1024 default
queue inq on $data_if flows 1024 bandwidth 12000K max 12256K qlimit 1024 default
queue outq on $vpn_if flows 1024 bandwidth 2000K max 2256K qlimit 1024 default
queue inq on $us_if flows 1024 bandwidth 2000K max 2256K qlimit 1024 default
