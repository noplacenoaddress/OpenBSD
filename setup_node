#!/bin/ksh

#	$Telecomlobby: setup_node,v 0.1 11/3/2021 21:01:04 taglio$
#
#unbound: https://blog.c6h12o6.org/post/unbound-dnssec-dns-over-tls/


set -o errexit
set -o nounset

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin:/root/Bin

function error_exit {
    echo "${app}: ${1:-"Unknown Error"}" 1>&2
    exit 1
}

app=$(basename $0)
backups="/root/Backups"
publicip=$(ifconfig egress | grep inet |grep -v inet6 | cut -d ' ' -f2)
dyndns=$(host -t a cat-01.hopto.org | cut -d ' ' -f4)
basedir=$(pwd)

INSTALL=/usr/bin/install
RCCTL=/usr/sbin/rcctl
USERADD=/usr/sbin/useradd
PKG_ADD=/usr/sbin/pkg_add
PFCTL=/sbin/pfctl
SH=/bin/ksh
GETENT=/usr/bin/getent
SSHKEYGEN=/usr/bin/ssh-keygen
DOAS=/usr/bin/doas
WGET=/usr/local/bin/wget
CHOWN=/sbin/chown

function pkg {
	phase=$1

	case $phase in
		"shell")
			pkg_add colorls nano wget fping iperf uptimed oidentd;;
	esac
}

function cleanold {
	directory=$1
	for file in $directory*.old; do
		if [[ -e "$file" ]]; then
			mv $file $backups
		fi
	done
	for file in $directory.*.old; do
		if [[ -e "$file" ]]; then
			mv $file $backups
		fi	
	done
}


function configuration {
	phase=$1
	if [[ $# -eq 2 ]]; then
		subphase=$2
	fi
	case $phase in
		"basic")
			echo "dot files"
			for file in src/home/taglio/.*; do
				if [[ -e "$file" ]]; then
					$INSTALL -o taglio -g wheel -m 0640 -b $file /home/taglio/ 
				fi
			done
			cleanold "/home/taglio/"
			for file in src/root/.*; do
				if [[ -e "$file" ]]; then
					$INSTALL -o root -g wheel -m 0640 -b $file /root/
				fi
			done
			cleanold "/root/"
			echo "dhclient, resolv.conf.tail and doas.conf"
			$INSTALL -o root -g wheel -m 0644 -b src/etc/{dhclient.conf,resolv.conf.tail,doas.conf} /etc/
			$INSTALL -o root -g wheel -m 0640 -b src/etc/hostname.vio0 /etc/
			echo "vether"
			$INSTALL -o root -g wheel -m 0644 -b src/etc/hostname.vether0 /etc/
			echo "configuring iperf uptimed and oidentd"
			$RCCTL enable uptimed
			$RCCTL start uptimed
			$INSTALL -o root -g wheel -m 0640 -b src/etc/rc.local /etc/
			cleanold "/etc/"
			cd /tmp
			nohup $SH /etc/netstart vio0 & 
			nohup $SH /etc/netstart vether0 &
			cd $basedir
			$SH /etc/rc.local;;	
		"users")
			echo "vmail, dsync, _iperfd, wwwuser"
			if ! $GETENT passwd vmail 1>&-; then 
				$USERADD -m -u 2000 -g =uid -c "Virtual Mail" -d /var/vmail -s /sbin/nologin vmail
			fi
			if ! $GETENT passwd dsync  1>&-; then 
				$USERADD -m -u 2001 -g =uid -c "Dsync Replication" -d /home/dsync -s /bin/ksh dsync
			fi
			if ! $GETENT passwd _iperfd  1>&-; then 
				$USERADD -m -u 2002 -g =uid -c "Iperfd Daemon" -d /nonexistent -s /sbin/nologin _iperfd
			fi
			if ! $GETENT passwd wwwftp  1>&-; then 
				$USERADD -u 2003 -g =uid -c "WWW Ftpd user" -d /var/www/htdocs -s /root/Bin/fake_shell.sh wwwftp
			fi
			for file in src/home/taglio/Bin/*; do
				if [[ -e "$file" ]]; then
					$INSTALL -o taglio -g wheel -m 0750 -b $file /home/taglio/Bin/
					mv $file $backups
				fi
			done
			if [[ ! -e /home/taglio/.ssh/id_ed25519 ]]; then
				$DOAS -u taglio $SSHKEYGEN -t ed25519 -N "" -f /home/taglio/.ssh/id_ed25519
			fi;;
		"scripts")
			for file in src/root/Bin/*.sh; do
				if [[ -e "$file" ]]; then
					$INSTALL -o root -g wheel -m 0700 -b $file /root/Bin/
				fi
			done
			cleanold "/root/Bin/";;
		"unbound")
			$RCCTL enable unbound
			case $subphase in 
				"local")
					unbound-anchor -a /var/unbound/db/root.key
					$WGET --no-check-certificate https://192.0.47.9/domain/named.root -O /var/unbound/db/root.hints
					$INSTALL -o _unbound -g _unbound -m 0750 -b src/var/unbound/db/ca-certificates.crt /var/unbound/db/
					$CHOWN _unbound:_unbound /var/unbound/db/*
					$INSTALL -o _unbound -g _unbound -m 0750 -b src/var/unbound/etc/unbound-local.conf /var/unbound/etc/unbound.conf
					$INSTALL -o _unbound -g _unbound -m 0750 -b src/var/unbound/etc/remote-control.conf /var/unbound/etc/
					$INSTALL -o _unbound -g _unbound -m 0750 -b src/var/unbound/etc/forward-zone.conf /var/unbound/etc/
					$RCCTL start unbound ||  error_exit "$LINENO: ERROR: UNBOUND failed."
					cleanold "/var/unbound/etc/";;
				"network")
					$INSTALL -o _unbound -g _unbound -m 0750 -b src/var/unbound/etc/unbound.conf /var/unbound/etc/unbound.conf
					$INSTALL -o _unbound -g _unbound -m 0750 -b src/var/unbound/etc/stub-zone.conf /var/unbound/etc/stub-zone.conf
					$RCCTL restart unbound ||  error_exit "$LINENO: ERROR: UNBOUND failed."
					cleanold "/var/unbound/etc/";;
			esac;;
		"ipsec")
			iked_ca_reset.sh
			$INSTALL -o root -g wheel -m 0640 -b src/etc/iked/ca/ca.crt /etc/iked/ca/
			ssl_pk12_cert_pub_priv_extract.sh $subphase.p12
			$RCCTL enable iked
			$RCCTL set iked flags "-vv"
			$INSTALL -o root -g wheel -m 0640 -b src/etc/iked.conf /etc/
			$RCCTL start iked
			cleanold "/etc/";;
		"gre")
			for file in src/etc/hostname.gre? ; do
				if [[ -e "$file" ]]; then
					$INSTALL -o root -g wheel -m 0700 -b $file /etc/
					$SH /etc/netstart $(echo $file | awk -F. '{print $2}')
				fi
			done
			cleanold "/etc/";;
		"pf")
			for file in src/etc/pf.* ; do
				if [[ -e "$file" ]]; then
					$INSTALL -o root -g wheel -m 0700 -b $file /etc/
				fi
			done 
			cleanold "/etc/"
			$PFCTL -nf /etc/pf.conf ||  error_exit "$LINENO: ERROR: PF failed."
			$PFCTL -f /etc/pf.conf;;
		"ospf")
			$RCCTL enable ospfd
			$INSTALL -o root -g wheel -m 0600 -b src/etc/ospfd.conf /etc/
			cleanold "/etc/"
			$RCCTL start ospfd ||  error_exit "$LINENO: ERROR: OSPFD failed.";;
		"ntpd")
			$INSTALL -o root -g wheel -m 0644 -b src/etc/ntpd.conf /etc/
			cleanold "/etc/"
			$RCCTL restart ntpd  ||  error_exit "$LINENO: ERROR: NTPD failed.";;		
	esac
}

echo "changing installurl"
ctrl=
while [ -z $ctrl ]
do
	echo -n 'Go ahead type 1 '
	read ctrl
	if [[ "$ctrl" -eq 1 ]]; then
		$INSTALL -o root -g wheel -m 0644 -b src/etc/installurl /etc/
	else
		error_exit "$LINENO: EXIT FROM USER." 
	fi
    
done		
echo "adding basic shell packages"
ctrl=
while [ -z $ctrl ]
do
	echo -n 'Go ahead type 1 '
	read ctrl
	if [[ "$ctrl" -eq 1 ]]; then
		pkg "shell"
	else
		error_exit "$LINENO: EXIT FROM USER." 
	fi
    
done
$RCCTL disable sndiod
$RCCTL disable check_quotas	
echo "configuring users"
ctrl=
while [ -z $ctrl ]
do
	echo -n 'Go ahead type 1 '
	read ctrl
	if [[ "$ctrl" -eq 1 ]]; then
		if [ ! -d /root/Bin ]; then 
			mkdir /root/Bin
			chmod 700 /root/Bin
		fi
		if [ ! -d /root/Backups ]; then 
			mkdir /root/Backups
			chmod 700 /root/Backups
		fi
		if [ ! -d /home/taglio/Bin ]; then 
			mkdir /home/taglio/Bin 
			chown taglio:wheel /home/taglio/Bin
		fi
		
		configuration "users"
		configuration "scripts"
	else
		error_exit "$LINENO: EXIT FROM USER." 
	fi
    
done
	
hostname=
while [ -z $hostname ]
do
	echo -n 'Type the hostname '
	read hostname
	echo $hostname > conf/hostname
	find . -type f | xargs -I {} sed -i "s/\/HOSTNAME\//$hostname/g" {}
done
routerid=
while [ -z $routerid ]
do
	echo -n 'Type the routerid '
	read routerid
	echo $routerid > conf/routerid
	find . -type f | xargs -I {} sed -i "s/\/ROUTERID\//$routerid/g" {}
done
publichost=
while [ -z $publichost ]
do
	echo -n 'Type the publichost '
	read publichost
	echo $publichost > conf/publichost
	find . -type f | xargs -I {} sed -i "s/\/PUBLICHOST\//$publichost/g" {}
done

echo $publicip > conf/publicip
echo $dyndns > conf/dyndns
find . -type f | xargs -I {} sed -i "s/\/PUBLICIP\//$publicip/g" {}
find . -type f | xargs -I {} sed -i "s/\/DYNDNS\//$dyndns/g" {}

echo "configuring basic"
ctrl=
while [ -z $ctrl ]
do
	echo -n 'Go ahead type 1 '
	read ctrl
	if [[ "$ctrl" -eq 1 ]]; then
		configuration "basic" 
	else
		error_exit "$LINENO: EXIT FROM USER." 
	fi
    
done
echo "configuring unbound"
ctrl=
while [ -z $ctrl ]
do
	echo -n 'Go ahead type 1 '
	read ctrl
	if [[ "$ctrl" -eq 1 ]]; then
		configuration "unbound" "local"
	else
		error_exit "$LINENO: EXIT FROM USER." 
	fi
    
done
echo -n "configuring ipsec \
	\nplease add ${publichost} to \
	\n/etc/pf.conf/table.ipsec \
	\nto the others nodes and reload them!"
ctrl=
while [ -z $ctrl ]
do
	echo -n 'Go ahead type 1 '
	read ctrl
	if [[ "$ctrl" -eq 1 ]]; then
		configuration "ipsec" $publichost
	else
		error_exit "$LINENO: EXIT FROM USER." 
	fi
done


