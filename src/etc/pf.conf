#	$OpenBSD: pf.conf,v 1.55 2017/12/03 20:40:04 sthen Exp $
#
# See pf.conf(5) and /etc/examples/pf.conf

# read the log file: tcpdump -n -e -ttt -r /var/log/pflog
# real-time logging: tcpdump -neq -ttt -i pflog0
#                    tcpdump -nettti pflog0 action drop
#		     tcpdump -vvopn -i enc0
# show queue: pfctl -vvs queue
#             systat queues
# show stats: pfctl -s info
#             systat pf
# show states: pfctl -s states
#              systat states
# table stats: pfctl -v -t martians -T show
# show rule nr. 4: pfctl -v -s rules -R 4
# show rules, prepend rule numbers: pfctl -a '*' -vvsr
#                                   systat rules
# show limits: pfctl -s memory


#OPTIONS
set block-policy drop
set skip on lo0
set block-policy drop
set loginterface egress
set loginterface gre
set loginterface vether
set loginterface enc

#VARIABLES
ext_if="vio0"

include "/etc/pf.conf.macro.public"

table <users> const persist counters file "/etc/pf.conf.table.users"
table <locals> const persist counters file "/etc/pf.conf.table.locals"
table <ipsec> const persist counters file "/etc/pf.conf.table.ipsec"
table <reserved> const persist counters file "/etc/pf.conf.table.reserved"
table <nsd> const persist counters file "/etc/pf.conf.table.nsd"
table <unbound> const persist counters file "/etc/pf.conf.table.unbound"
table <cdn> const persist counters file "/etc/pf.conf.table.cdn"



table <ospf_mcast> persist const {224.0.0.5, 224.0.0.6}
table <attacker> persist
table <attacker_v6> persist

#DEFAULT POLICY
block log 
block quick log  from <attacker> 
block quick log  from <attacker_v6> 
block log  proto {tcp,udp} user _iperfd 
 

pass quick on $ext_if to $ext_if:broadcast

#QUEUE

#queue outq on $ext_if bandwidth 99M max 99M flows 1024 qlimit 1024 

#NAT

match out on $ext_if from <users> to ! <reserved> received-on gre nat-to $pub tag /LANDOMAINNAME/
#match out on $ext_if from wg:network to ! <reserved> nat-to $ext_if 

#INGRESS

#PUB

#routeradv 134
#neighbrsol 135
#neighbradv 136
#echoreq 128

pass in on $ext_if inet6 proto icmp6  icmp6-type { 128, 133, 134, 135, 136 } 
pass in on $ext_if proto icmp from any to $pub icmp-type echoreq
pass in on $ext_if proto tcp from <ipsec> to $pub port { ssh, 31137 } modulate state 
pass in on $ext_if proto tcp from any to $pub port { smtp, smtps } modulate state (max-src-conn 2, max-src-conn-rate 8/30, overload <attacker>)
pass in on $ext_if proto tcp from any to $pub_v6 port  { smtp, smtps } modulate state (max-src-conn 2, max-src-conn-rate 8/30, overload <attacker_v6>)
pass in on $ext_if proto tcp from any to { $pub , $pub_v6 } port auth modulate state
pass in on $ext_if proto {tcp udp} from any to { $pub , $pub_v6 } port domain 
pass in on $ext_if proto tcp from any to { $pub , $pub_v6 } port {www, https} modulate state 
pass in on $ext_if proto udp from any to { $pub , $pub_v6 } port 65131 
pass in on $ext_if proto udp from <ipsec> to $pub port {isakmp, ipsec-nat-t} 
pass in on $ext_if proto esp from <ipsec> to $pub  

#ENC 

#include "/etc/pf.conf.macro.enc.in"

pass quick on enc proto gre

#GRE

pass in quick on gre from <users> to ! <reserved>
pass in on gre proto gre no state
pass in on gre proto icmp from <locals> to gre icmp-type echoreq
pass in on gre proto ospf 
pass in on gre proto icmp from <locals> to vether0 icmp-type echoreq
pass in on gre inet proto icmp from <locals> to <locals> icmp-type echoreq
pass in on gre inet proto tcp from <locals> to <locals> port ssh modulate state
pass in on gre proto tcp from <users> to vether0 port {ftp, ssh, http, imaps, 31337} modulate state
pass in on gre proto udp from <locals> to 172.16.17.106 port {domain, ntp}
pass in on gre proto tcp from <locals> to 172.16.17.106 port http modulate state
pass in on gre proto udp from <users> to vether0 port 5353 user _tor modulate state
pass in on gre proto tcp from <users> to vether0 port \
	{9900, 9901, 9902, 9903, 9904, 9905, 9906, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9050} user _tor modulate state
pass in on gre proto tcp from <locals> to vether0 port {http,  submission} modulate state
pass in on gre proto tcp from <locals> to <locals> port http modulate state
pass in on gre proto tcp from <locals> to vether0 port 5001 user _iperfd modulate state
pass in on nsd proto {tcp, udp} from nsd:peer to nsd port domain 

#VETHER
pass in on vether0 proto icmp from <locals> to vether0 icmp-type echoreq 
pass in on vether0 proto tcp from <users> to vether0 port {ftp, ssh, http, submission, imaps, 31337} modulate state
pass in on vether0 proto udp from <users> to vether0 port 5353 user _tor 
pass in on vether0 proto tcp from <users> to vether0 port \
	{9900, 9901, 9902, 9903, 9904, 9905, 9906, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9050} user _tor modulate state
pass in on vether0 proto tcp from <locals> to vether0 port {http, submission} modulate state
pass in on vether0 proto tcp from <locals> to vether0 port 5001 user _iperfd modulate state


#OUTGRESS

#PUB

pass out quick on $ext_if tagged /LANDOMAINNAME/ 
pass out quick on $ext_if inet6 proto icmp6  icmp6-type { 128, 133, 134, 135, 136 } 
pass out quick on $ext_if proto icmp from $pub to any icmp-type echoreq 
pass out quick on $ext_if proto tcp from $pub to <ipsec> port {ssh, 31137} modulate state
pass out quick on $ext_if proto tcp from $pub to any port { smtp, smtps } modulate state
pass out quick on $ext_if proto tcp from $pub_v6 to any port { smtp, smtps } modulate state
pass out quick on $ext_if proto {tcp, udp} from $pub to 8.8.8.8 port domain 
pass out quick on $ext_if proto tcp from $pub to any port https user _rspamd modulate state
pass out quick on $ext_if proto tcp from $pub_v6 to any port https user _rspamd modulate state
pass out quick on $ext_if proto tcp from $pub to any port {http, https} modulate state
pass out quick on $ext_if proto {tcp, udp} from $pub to <unbound> port domain-s 
pass out quick on $ext_if proto {tcp, udp} from $pub_v6 to <unbound> port domain-s 
pass out quick on $ext_if proto {tcp, udp} from $pub port domain user _unbound
pass out quick on $ext_if proto {tcp, udp} from $pub to <nsd> port domain user _nsd
pass out quick on $ext_if proto {tcp, udp} from $pub_v6 to <nsd> port domain user _nsd
pass out quick on $ext_if proto tcp from $pub to <cdn> port {http, https} modulate state
pass out quick on $ext_if proto tcp from $pub_v6 to <cdn> port {http, https} modulate state
pass out quick on $ext_if proto udp from $pub to <ipsec> port {isakmp, ipsec-nat-t} 
pass out quick on $ext_if proto esp from $pub to <ipsec> 

#ENC

#include "/etc/pf.conf.macro.enc.out"

pass out quick on enc proto gre

#VETHER

pass out quick on vether0 proto ospf

#GRE

pass out quick on gre proto udp from gre to 172.16.17.106 port {domain, ntp} 
pass out quick on gre proto udp from <locals> to 172.16.17.106 port {domain, ntp}
pass out quick on gre proto tcp from <locals> to 172.16.17.106 port http modulate state
pass out quick on gre proto tcp from gre to 172.16.17.106 port http
pass out on gre proto gre no state
pass out quick on gre proto ospf 
pass out quick on gre proto icmp from gre to <locals> icmp-type echoreq 
pass out quick	 on gre inet proto icmp from <locals> to <locals> icmp-type echoreq
pass out quick	 on gre inet proto tcp from <locals> to <locals> port ssh modulate state
pass out quick on nsd proto {tcp, udp} from nsd to nsd:peer port domain 
