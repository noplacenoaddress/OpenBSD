#	$OpenBSD: pf.conf,v 1.55 2017/12/03 20:40:04 sthen Exp $
#
# See pf.conf(5) and /etc/examples/pf.conf
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
# PF diagram: https://github.com/redeltaglio/OpenBSD/raw/master/pdf/pf_packetflow_diagram.pdf
=======
>>>>>>> master
>>>>>>> Stashed changes

# read the log file: tcpdump -n -e -ttt -r /var/log/pflog
# real-time logging: tcpdump -neq -ttt -i pflog0
#                    tcpdump -nettti pflog0 action drop
#		     tcpdump -vvopn -i enc0
# show queue: pfctl -vvs queue
#             systat queues
# show stats: pfctl -s info
#             systat pf
# show states: pfctl -s states
#              systat states
# table stats: pfctl -v -t martians -T show
# show rule nr. 4: pfctl -v -s rules -R 4
# show rules, prepend rule numbers: pfctl -a '*' -vvsr
#                                   systat rules
# show limits: pfctl -s memory


#OPTIONS
set block-policy drop
set skip on lo0
set block-policy drop
set loginterface egress
set loginterface gre
set loginterface vether
set loginterface enc
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
set timeout { other.first 20, other.multiple 20, other.single 10 }
=======
>>>>>>> master
>>>>>>> Stashed changes

#VARIABLES
ext_if="vio0"

include "/etc/pf.conf.macro.public"

table <users> const persist counters file "/etc/pf.conf.table.users"
table <locals> const persist counters file "/etc/pf.conf.table.locals"
table <ipsec> const persist counters file "/etc/pf.conf.table.ipsec"
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
table <lte> const persist counters file "/etc/pf.conf.table.lte"
=======
>>>>>>> master
>>>>>>> Stashed changes
table <reserved> const persist counters file "/etc/pf.conf.table.reserved"
table <nsd> const persist counters file "/etc/pf.conf.table.nsd"
table <unbound> const persist counters file "/etc/pf.conf.table.unbound"
table <cdn> const persist counters file "/etc/pf.conf.table.cdn"
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
table <clientes> const persist counters file "/etc/pf.conf.table.clientes"
table <guifi> const persist counters file "/etc/pf.conf.table.guifi"

=======
>>>>>>> master
>>>>>>> Stashed changes


table <ospf_mcast> persist const {224.0.0.5, 224.0.0.6}
table <attacker> persist
table <attacker_v6> persist

#DEFAULT POLICY
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
block log
block quick on $ext_if proto gre
block quick log  from <attacker>
block quick log  from <attacker_v6>
block log  proto {tcp,udp} user _iperfd

=======
>>>>>>> Stashed changes
block log 
block quick log  from <attacker> 
block quick log  from <attacker_v6> 
block log  proto {tcp,udp} user _iperfd 
 
<<<<<<< Updated upstream
=======
>>>>>>> master
>>>>>>> Stashed changes

pass quick on $ext_if to $ext_if:broadcast

#QUEUE

<<<<<<< Updated upstream
#queue outq on $ext_if bandwidth 99M max 99M flows 1024 qlimit 1024 
=======
<<<<<<< HEAD
#queue outq on $ext_if bandwidth 99M max 99M flows 1024 qlimit 1024
=======
#queue outq on $ext_if bandwidth 99M max 99M flows 1024 qlimit 1024 
>>>>>>> master
>>>>>>> Stashed changes

#NAT

match out on $ext_if from <users> to ! <reserved> received-on gre nat-to $pub tag /LANDOMAINNAME/
<<<<<<< Updated upstream
#match out on $ext_if from wg:network to ! <reserved> nat-to $ext_if 
=======
<<<<<<< HEAD
match out on $ext_if from <clientes> to ! <reserved> received-on gre nat-to $pub tag CLIENTES
match out on gre from gre to 172.16.17.106 nat-to vether0:0
#match out on $ext_if from <guifi> to ! <reserved> received-on gre nat-to $pub tag /LANDOMAINNAME/
#match out on $ext_if from wg:network to ! <reserved> nat-to $ext_if
=======
#match out on $ext_if from wg:network to ! <reserved> nat-to $ext_if 
>>>>>>> master
>>>>>>> Stashed changes

#INGRESS

#PUB

#routeradv 134
#neighbrsol 135
#neighbradv 136
#echoreq 128

<<<<<<< Updated upstream
pass in on $ext_if inet6 proto icmp6  icmp6-type { 128, 135, 136 } keep state
pass in on $ext_if proto icmp from any to $pub icmp-type echoreq keep state
pass in on $ext_if proto tcp from <ipsec> to $pub port ssh modulate state 
=======
<<<<<<< HEAD
pass in quick on $ext_if to <clientes> tag CLIENTES
pass in on $ext_if inet6 proto icmp6 icmp6-type { 128, 133, 134, 135, 136 }
pass in on $ext_if proto icmp from any to $pub icmp-type echoreq
pass in on $ext_if proto tcp from <ipsec> to $pub port { ssh, 31137 } modulate state
>>>>>>> Stashed changes
pass in on $ext_if proto tcp from any to $pub port { smtp, smtps } modulate state (max-src-conn 2, max-src-conn-rate 8/30, overload <attacker>)
pass in on $ext_if proto tcp from any to $pub_v6 port  { smtp, smtps } modulate state (max-src-conn 2, max-src-conn-rate 8/30, overload <attacker_v6>)
pass in on $ext_if proto tcp from any to { $pub , $pub_v6 } port auth modulate state
pass in on $ext_if proto {tcp udp} from any to { $pub , $pub_v6 } port domain modulate state
pass in on $ext_if proto tcp from any to { $pub , $pub_v6 } port {www, https} modulate state
pass in on $ext_if proto udp from any to { $pub , $pub_v6 } port 65131 modulate state
pass in on $ext_if proto udp from <ipsec> to $pub port {isakmp, ipsec-nat-t} keep state
pass in on $ext_if proto esp from <ipsec> to $pub  

#ENC 

include "/etc/pf.conf.macro.enc.in"

#GRE

pass in quick on gre from <users> to ! <reserved>
pass in on gre proto gre no state
pass in on gre proto icmp from <locals> to gre icmp-type echoreq
pass in on gre proto ospf keep state
pass in on gre proto icmp from <locals> to vether0 icmp-type echoreq
pass in on gre proto tcp from <users> to vether0 port {ftp, ssh, http, imaps, 31337}
pass in on gre proto udp from <users> to vether0 port 5353 user _tor modulate state
pass in on gre proto tcp from <users> to vether0 port \
	{9900, 9901, 9902, 9903, 9904, 9905, 9906, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9050} user _tor modulate state
pass in on gre proto tcp from <locals> to vether0 port {http,  submission} modulate state
pass in on gre proto tcp from <locals> to vether0 port 5001 user _iperfd modulate state
#pass in on nsd proto {tcp, udp} from nsd:peer to <nsd> port domain modulate state

#VETHER
pass in on vether0 proto icmp from <locals> to vether0 icmp-type echoreq modulate state
pass in on vether0 proto tcp from <users> to vether0 port {ftp, ssh, http, submission, imaps, 31337} modulate state
<<<<<<< Updated upstream
pass in on vether0 proto udp from <users> to vether0 port 5353 user _tor modulate state
=======
pass in on vether0 proto udp from <users> to vether0 port 5353 user _tor
=======
pass in on $ext_if inet6 proto icmp6  icmp6-type { 128, 135, 136 } keep state
pass in on $ext_if proto icmp from any to $pub icmp-type echoreq keep state
pass in on $ext_if proto tcp from <ipsec> to $pub port ssh modulate state 
pass in on $ext_if proto tcp from any to $pub port { smtp, smtps } modulate state (max-src-conn 2, max-src-conn-rate 8/30, overload <attacker>)
pass in on $ext_if proto tcp from any to $pub_v6 port  { smtp, smtps } modulate state (max-src-conn 2, max-src-conn-rate 8/30, overload <attacker_v6>)
pass in on $ext_if proto tcp from any to { $pub , $pub_v6 } port auth modulate state
pass in on $ext_if proto {tcp udp} from any to { $pub , $pub_v6 } port domain modulate state
pass in on $ext_if proto tcp from any to { $pub , $pub_v6 } port {www, https} modulate state
pass in on $ext_if proto udp from any to { $pub , $pub_v6 } port 65131 modulate state
pass in on $ext_if proto udp from <ipsec> to $pub port {isakmp, ipsec-nat-t} keep state
pass in on $ext_if proto esp from <ipsec> to $pub  

#ENC 

include "/etc/pf.conf.macro.enc.in"

#GRE

pass in quick on gre from <users> to ! <reserved>
pass in on gre proto gre no state
pass in on gre proto icmp from <locals> to gre icmp-type echoreq
pass in on gre proto ospf keep state
pass in on gre proto icmp from <locals> to vether0 icmp-type echoreq
pass in on gre proto tcp from <users> to vether0 port {ftp, ssh, http, imaps, 31337}
pass in on gre proto udp from <users> to vether0 port 5353 user _tor modulate state
pass in on gre proto tcp from <users> to vether0 port \
	{9900, 9901, 9902, 9903, 9904, 9905, 9906, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9050} user _tor modulate state
pass in on gre proto tcp from <locals> to vether0 port {http,  submission} modulate state
pass in on gre proto tcp from <locals> to vether0 port 5001 user _iperfd modulate state
#pass in on nsd proto {tcp, udp} from nsd:peer to <nsd> port domain modulate state

#VETHER
pass in on vether0 proto icmp from <locals> to vether0 icmp-type echoreq modulate state
pass in on vether0 proto tcp from <users> to vether0 port {ftp, ssh, http, submission, imaps, 31337} modulate state
pass in on vether0 proto udp from <users> to vether0 port 5353 user _tor modulate state
>>>>>>> master
>>>>>>> Stashed changes
pass in on vether0 proto tcp from <users> to vether0 port \
	{9900, 9901, 9902, 9903, 9904, 9905, 9906, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9050} user _tor modulate state
pass in on vether0 proto tcp from <locals> to vether0 port {http, submission} modulate state
pass in on vether0 proto tcp from <locals> to vether0 port 5001 user _iperfd modulate state
<<<<<<< Updated upstream
=======
<<<<<<< HEAD
pass in on vether0 proto tcp from <locals> to vether0 port 31338 modulate state

#WG

#include "/etc/pf.conf.macro.wg.in"
=======
>>>>>>> master
>>>>>>> Stashed changes


#OUTGRESS

#PUB

<<<<<<< Updated upstream
pass out quick on $ext_if tagged /LANDOMAINNAME/ keep state
pass out quick on $ext_if inet6 proto icmp6  icmp6-type { 128, 136 } keep state
pass out quick on $ext_if proto icmp from $pub to any icmp-type echoreq keep state
pass out quick on $ext_if proto tcp from $pub to <ipsec> port {56922} modulate state
=======
<<<<<<< HEAD
pass out quick on $ext_if tagged /LANDOMAINNAME/
pass out quick on $ext_if tagged CLIENTES
pass out quick on $ext_if inet6 proto icmp6 icmp6-type { 128, 133, 134, 135, 136 }
pass out quick on $ext_if inet proto udp to port 33433 >< 33626
pass out quick on $ext_if proto icmp from $pub to any icmp-type echoreq
pass out quick on $ext_if proto tcp from $pub to port whois modulate state
pass out quick on $ext_if proto tcp from $pub to <ipsec> port {ssh, 31137} modulate state
>>>>>>> Stashed changes
pass out quick on $ext_if proto tcp from $pub to any port { smtp, smtps } modulate state
pass out quick on $ext_if proto tcp from $pub_v6 to any port { smtp, smtps } modulate state
pass out quick on $ext_if proto udp from $pub to 8.8.8.8 port domain modulate state
pass out quick on $ext_if proto {tcp, udp} from $pub to any port https user _rspamd modulate state
pass out quick on $ext_if proto {tcp, udp} from $pub_v6 to any port https user _rspamd modulate state
pass out quick on $ext_if proto tcp from $pub to github.com port https user taglio modulate state
pass out quick on $ext_if proto {tcp, udp} from $pub to <unbound> port domain-s modulate state
pass out quick on $ext_if proto {tcp, udp} from $pub_v6 to <unbound> port domain-s modulate state
pass out quick on $ext_if proto tcp from $pub to <cdn> port {http, https} modulate state
pass out quick on $ext_if proto tcp from $pub_v6 to <cdn> port {http, https} modulate state
pass out quick on $ext_if proto udp from $pub to <ipsec> port {isakmp, ipsec-nat-t} keep state
pass out quick on $ext_if proto esp from $pub to <ipsec> keep state

#ENC

include "/etc/pf.conf.macro.enc.out"

#GRE
<<<<<<< Updated upstream
=======
pass out quick on gre proto gre no state
pass out quick on gre tagged CLIENTES
pass out quick on gre inet proto udp to port 33433 >< 33626
pass out quick on gre proto udp from gre to 172.16.17.106 port {domain, ntp}
pass out quick on gre proto udp from <locals> to 172.16.17.106 port {domain, ntp}
pass out quick on gre proto tcp from <locals> to 172.16.17.106 port http modulate state
pass out quick on gre proto tcp from gre to 172.16.17.106 port http
pass out quick on gre proto ospf
pass out quick on gre proto icmp from gre to <locals> icmp-type echoreq
pass out quick	 on gre inet proto icmp from <locals> to <locals> icmp-type echoreq
pass out quick	 on gre inet proto tcp from <locals> to <locals> port {ftp, http, ssh, 8291} modulate state
pass out quick on nsd proto {tcp, udp} from nsd to nsd:peer port domain

#WG

#include "/etc/pf.conf.macro.wg.out"
=======
pass out quick on $ext_if tagged /LANDOMAINNAME/ keep state
pass out quick on $ext_if inet6 proto icmp6  icmp6-type { 128, 136 } keep state
pass out quick on $ext_if proto icmp from $pub to any icmp-type echoreq keep state
pass out quick on $ext_if proto tcp from $pub to <ipsec> port {56922} modulate state
pass out quick on $ext_if proto tcp from $pub to any port { smtp, smtps } modulate state
pass out quick on $ext_if proto tcp from $pub_v6 to any port { smtp, smtps } modulate state
pass out quick on $ext_if proto udp from $pub to 8.8.8.8 port domain modulate state
pass out quick on $ext_if proto {tcp, udp} from $pub to any port https user _rspamd modulate state
pass out quick on $ext_if proto {tcp, udp} from $pub_v6 to any port https user _rspamd modulate state
pass out quick on $ext_if proto tcp from $pub to github.com port https user taglio modulate state
pass out quick on $ext_if proto {tcp, udp} from $pub to <unbound> port domain-s modulate state
pass out quick on $ext_if proto {tcp, udp} from $pub_v6 to <unbound> port domain-s modulate state
pass out quick on $ext_if proto tcp from $pub to <cdn> port {http, https} modulate state
pass out quick on $ext_if proto tcp from $pub_v6 to <cdn> port {http, https} modulate state
pass out quick on $ext_if proto udp from $pub to <ipsec> port {isakmp, ipsec-nat-t} keep state
pass out quick on $ext_if proto esp from $pub to <ipsec> keep state

#ENC

include "/etc/pf.conf.macro.enc.out"

#GRE
>>>>>>> Stashed changes

pass out quick on gre proto udp from gre to 172.16.17.106 port {domain, ntp} modulate state	
pass out on gre proto gre no state
pass out quick on gre proto ospf keep state
pass out quick on gre proto icmp from gre to <locals> icmp-type echoreq keep state
<<<<<<< Updated upstream
=======
>>>>>>> master
>>>>>>> Stashed changes
