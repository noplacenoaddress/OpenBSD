#!/bin/sh

err() {
	echo "==> $1"
	exit 1
}

CONF=/etc/remote-unlock.conf

SSHD_PORT=${SSHD_PORT:-2332}
SSHD_PID=${SSHD_PID:-/var/run/sshd-remote-unlock.pid}
SSHD_USER=${SSHD_USER:-root}
SSHD_CONF=${SSHD_CONF:-/etc/ssh/sshd_remote-unlock}

FSCK_OPTS=${FSCK_OPTS:=""}

SSHD_CONTENTS=$(cat <<EOF

##################################
#   Autogenerated: DO NOT EDIT!  #
#                                #
#   Update ${CONF} and run:      #
#     /sbin/remote-unlock init   #
##################################

Port ${SSHD_PORT}
AddressFamily any
ListenAddress 0.0.0.0
ListenAddress ::
PidFile ${SSHD_PID}

LoginGraceTime 10s
PermitRootLogin prohibit-password
MaxSessions 1
ClientAliveCountMax 1

AllowTcpForwarding no
PasswordAuthentication no
PermitTunnel no
PrintMotd no
PubkeyAuthentication yes
X11Forwarding no

AuthorizedKeysFile none
AuthorizedKeysCommand /sbin/remote-unlock %u
AuthorizedKeysCommandUser nobody

Match User ${SSHD_USER}
	ForceCommand "/sbin/remote-unlock"
EOF
)


if [ -x $CONF ]; then
	. $CONF
else
	err "$CONF does not exist or is not +x"
fi

case "$1" in
	"init")
		echo "${SSHD_CONTENTS}" > "${SSHD_CONF}"
		;;
	"listen")
		/usr/sbin/sshd -f $SSHD_CONF
		;;
	"stop")
		if [ -f ${SSHD_PID} ]; then 
			kill $(cat ${SSHD_PID})
		else
			exit 1
		fi
		;;
	"${SSHD_USER}")
		echo "${SSH_AUTHORIZED_KEY}"
		exit 0
		;;
	"")
		if /sbin/bioctl -c C -l ${CRYPT_DEV} softraid0; then
			/sbin/fsck ${FSCK_OPTS} ${MOUNT_DEV} && \
				mount -o ${MOUNT_OPTS} ${MOUNT_DEV} ${CRYPT_MOUNT}
			/sbin/remote-unlock stop
		else
			/sbin/remote-unlock stop
		fi
		;;
	*)
		echo "unknown command"
		exit 1
		;;
esac
