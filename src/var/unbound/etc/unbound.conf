# The server clause sets the main parameters.
server:
	# verbosity number, 0 is least verbose. 1 is default.
	verbosity: 1
	statistics-interval: 0
	extended-statistics: yes
	interface: 127.0.0.1
	interface: ::1
	prefer-ip6: yes
	do-ip4: yes
	do-ip6: yes
	do-udp: yes
	do-tcp: yes

	access-control: 0.0.0.0/0 refuse
	access-control: 127.0.0.0/8 allow
	access-control: ::0/0 refuse
	access-control: ::1 allow
	access-control: ::ffff:127.0.0.1 allow
	
	#Root DNS tree
	root-hints: /var/unbound/db/root.hints

	# Sent minimum amount of information to upstream servers to enhance
	# privacy. Only sent minimum required labels of the QNAME and set QTYPE
	# to A when possible.
	qname-minimisation: yes

	# Use 0x20-encoded random bits in the query to foil spoof attempts.
	# This feature is an experimental implementation of draft dns-0x20.
	use-caps-for-id: yes

	# if yes, perform prefetching of almost expired message cache entries.
	prefetch: yes

	# if yes, Unbound rotates RRSet order in response.
	rrset-roundrobin: yes

	# if yes, Unbound doesn't insert authority/additional sections
	# into response messages when those sections are not required.
	minimal-responses: yes
	
	# File with trusted keys, kept uptodate using RFC5011 probes,
	# initial file like trust-anchor-file, then it stores metadata.
	# Use several entries, one per domain name, to track multiple zones.
	#
	# If you want to perform DNSSEC validation, run unbound-anchor before
	# you start unbound (i.e. in the system boot scripts).	And enable:
	# Please note usage of unbound-anchor root anchor is at your own risk
	# and under the terms of our LICENSE (see that file in the source).
	auto-trust-anchor-file: "/var/unbound/db/root.key"

	# Have the validator log failed validations for your diagnosis.
	# 0: off. 1: A line per failed user query. 2: With reason and bad IP.
	val-log-level: 1

	# Certificates used to authenticate connections made upstream.
	tls-cert-bundle: "/var/unbound/etc/ca-certificates.crt"

	# Allow query to nsd for local-zones
	do-not-query-localhost: no

	# Allow the domain (and its subdomains) to contain private addresses.
	# local-data statements are allowed to contain private addresses too.
	private-domain: "telecom.lobby"
        private-domain: "13.168.192.in-addr.arpa"
	private-domain: "10.10.10.in-addr.arpa"
	private-domain: "19.16.172.in-addr.arpa"

	# Ignore chain of trust. Domain is treated as insecure.
	domain-insecure: "telecom.lobby"
        domain-insecure: "13.168.192.in-addr.arpa"
	domain-insecure: "10.10.10.in-addr.arpa"
	domain-insecure: "19.16.172.in-addr.arpa"

	# By default, for a number of zones a small default 'nothing here'
	# reply is built-in.  Query traffic is thus blocked.  If you
	# wish to serve such zone you can unblock them by uncommenting one
	# of the nodefault statements below.
	# You may also have to use domain-insecure: zone to make DNSSEC work,
	# unless you have your own trust anchors for this zone.
	#local-zone: "13.168.192.in-addr.arpa." nodefault
	local-zone: "telecom.lobby" transparent
	local-zone: "13.168.192.in-addr.arpa" transparent
	local-zone: "10.10.10.in-addr.arpa" transparent
	local-zone: "19.16.172.in-addr.arpa" transparent

include: /var/unbound/etc/remote-control.conf
include: /var/unbound/etc/forward-zone.conf
include: /var/unbound/etc/stub-zone.conf
